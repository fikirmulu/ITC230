<html>
<head>
    <title>React App Demo</title>

    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">

const MusicIndex = (props) => {
    console.log (props)
    const list_items=props.items.map((item) => {
        return <li onClick={props.clickhandler} key= {item.title}>{item.title}</li>
    })
    return <div>
        <h2>Music collection</h2>
        <ul>{list_items}</ul> 
        <hr/>
    </div>
}

const MusicDetail = (props) => {
    console.log(props)
    return <div> <b>Details for {props.item.title}:</b>
        <p>artist:{props.item.artist}</p>
        <p>genre:{props.item.genre}</p>
        <p>year:{props.item.year}</p>
        </div>
}

class App extends React.Component {
      constructor(props){
          super(props);
          // Set initial state using data from server application
          this.state = {
            items: {{{ musics }}},
            currentMusic: { } // current selected item
          }
        this.handleClick = this.handleClick.bind(this);
      }

handleClick(e) {
        let clicked= e.target.innerText
        console.log(clicked)
        let newMusic=this.state.items.find((item) => {
            return item.title == clicked
        })
        console.log(newMusic)
        this.setState ({
        currentMusic: newMusic
        });
    }
      render() {
        // render app UI elements
        return (
          <div>
          <h2>My music collections</h2>
          <MusicIndex items={this.state.items} clickhandler={this.handleClick}/>
          <MusicDetail item={this.state.currentMusic}/>
          </div>
          );
          
      }
}  

    ReactDOM.render(<App />, document.getElementById('root'));
</script>
</body>
</html>

